const { client } = require('../src/db');

async function testVulnerabilityAPIWithAuth() {
  try {
    console.log('🔍 Testing vulnerability API with authentication...');
    
    // First, let's get a valid user and create a token for testing
    const users = await client`SELECT id, email FROM users WHERE role = 'admin' LIMIT 1`;
    
    if (users.length === 0) {
      console.log('❌ No admin users found. Please create an admin user first.');
      return;
    }
    
    const user = users[0];
    console.log(`👤 Using admin user: ${user.email}`);
    
    // Create a simple JWT token for testing (this is just for testing purposes)
    const jwt = require('jsonwebtoken');
    const JWT_SECRET = process.env.JWT_SECRET || 'your-secret-key';
    
    const token = jwt.sign(
      { 
        userId: user.id, 
        email: user.email,
        role: 'admin'
      }, 
      JWT_SECRET, 
      { expiresIn: '1h' }
    );
    
    console.log('🔑 Generated test token');
    
    // Test the API with authentication
    const response = await fetch('http://localhost:3001/api/v1/vulnerabilities?limit=3', {
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${token}`
      }
    });
    
    console.log(`🌐 API Response Status: ${response.status}`);
    
    if (response.ok) {
      const data = await response.json();
      console.log('✅ API Response Success!');
      console.log('📊 Data count:', data.data?.length || 0);
      console.log('📄 Pagination:', data.pagination);
      
      if (data.data && data.data.length > 0) {
        console.log('\n📋 Sample vulnerability:');
        const vuln = data.data[0];
        console.log({
          id: vuln.id,
          plugin_id: vuln.plugin_id,
          plugin_name: vuln.plugin_name,
          plugin_family: vuln.plugin_family,
          severity_name: vuln.severity_name,
          cvss3_base_score: vuln.cvss3_base_score,
          state: vuln.state
        });
      }
    } else {
      const errorText = await response.text();
      console.log('❌ API Error:', errorText);
    }
    
    // Test summary endpoint
    console.log('\n🔍 Testing summary endpoint...');
    const summaryResponse = await fetch('http://localhost:3001/api/v1/vulnerabilities/summary', {
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${token}`
      }
    });
    
    if (summaryResponse.ok) {
      const summaryData = await summaryResponse.json();
      console.log('📈 Summary data:', summaryData.data);
    } else {
      console.log('❌ Summary API Error:', await summaryResponse.text());
    }
    
  } catch (error) {
    console.error('❌ Error:', error.message);
  } finally {
    await client.end();
  }
}

testVulnerabilityAPIWithAuth();
