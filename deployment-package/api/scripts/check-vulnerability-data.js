const { client } = require('../src/db');

async function checkVulnerabilityData() {
  try {
    console.log('üîç Checking vulnerability data in database...');
    
    // Check vulnerabilities table
    const vulnCount = await client`SELECT COUNT(*) as count FROM vulnerabilities`;
    console.log(`üìä Vulnerabilities table: ${vulnCount[0].count} records`);
    
    if (vulnCount[0].count > 0) {
      // Show sample data
      const sampleData = await client`
        SELECT id, plugin_id, plugin_name, plugin_family, severity, severity_name, 
               cvss3_base_score, state, first_found, last_found, asset_uuid
        FROM vulnerabilities 
        LIMIT 5
      `;
      
      console.log('\nüìã Sample vulnerability data:');
      console.table(sampleData);
      
      // Check severity distribution
      const severityDist = await client`
        SELECT severity_name, COUNT(*) as count
        FROM vulnerabilities 
        GROUP BY severity_name, severity
        ORDER BY severity DESC
      `;
      
      console.log('\nüìà Severity distribution:');
      console.table(severityDist);
    }
    
    // Check if API endpoint exists
    console.log('\nüåê Testing API endpoint...');
    try {
      // Test without auth first
      const response = await fetch('http://localhost:3001/api/v1/vulnerabilities?limit=3', {
        headers: {
          'Content-Type': 'application/json'
        }
      });

      console.log(`API Response Status: ${response.status}`);

      if (response.ok) {
        const data = await response.json();
        console.log('API Response Sample:');
        console.log('Success:', data.success);
        console.log('Data count:', data.data?.length || 0);
        if (data.data && data.data.length > 0) {
          console.log('First record:', {
            id: data.data[0].id,
            plugin_id: data.data[0].plugin_id,
            plugin_name: data.data[0].plugin_name,
            severity_name: data.data[0].severity_name
          });
        }
        console.log('Pagination:', data.pagination);
      } else {
        const errorText = await response.text();
        console.log('API Error:', errorText);
      }
    } catch (apiError) {
      console.error('API Connection Error:', apiError.message);
    }
    
  } catch (error) {
    console.error('‚ùå Database Error:', error.message);
  } finally {
    await client.end();
  }
}

checkVulnerabilityData();
