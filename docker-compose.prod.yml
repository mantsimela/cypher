version: '3.8'

services:
  # API Service
  api:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cypher-api
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgresql://rasdashadmin:RasDash2025%24@rasdash-dev-public.cexgrlslydeh.us-east-1.rds.amazonaws.com:5432/rasdashdev01
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret-key}
      - CORS_ORIGIN=https://rasdash.dev.com,http://rasdash.dev.com,http://localhost:3000
      - DB_HOST=rasdash-dev-public.cexgrlslydeh.us-east-1.rds.amazonaws.com
      - DB_PORT=5432
      - DB_NAME=rasdashdev01
      - DB_USER=rasdashadmin
      - DB_PASSWORD=RasDash2025$$
      - DB_SSL=true
      - DOMAIN=rasdash.dev.com
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cypher-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: cypher-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./client/dist:/usr/share/nginx/html
      - ./nginx.prod.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl/certs  # For future SSL certificates
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - cypher-network

  # Let's Encrypt SSL Certificate Manager (for future use)
  certbot:
    image: certbot/certbot
    container_name: cypher-certbot
    volumes:
      - ./ssl:/etc/letsencrypt
      - ./client/dist:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email admin@rasdash.dev.com --agree-tos --no-eff-email -d rasdash.dev.com
    profiles:
      - ssl  # Only run when ssl profile is specified

  # Database backup service
  backup:
    image: postgres:13-alpine
    container_name: cypher-backup
    environment:
      - PGPASSWORD=RasDash2025$$
    volumes:
      - ./backups:/backups
    command: >
      sh -c "
        while true; do
          sleep 86400
          pg_dump -h rasdash-dev-public.cexgrlslydeh.us-east-1.rds.amazonaws.com -U rasdashadmin -d rasdashdev01 > /backups/backup-$$(date +%Y%m%d-%H%M%S).sql
          find /backups -name '*.sql' -mtime +7 -delete
        done
      "
    restart: unless-stopped
    networks:
      - cypher-network

  # Monitoring service
  watchtower:
    image: containrrr/watchtower
    container_name: cypher-watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 3600 --cleanup
    restart: unless-stopped

networks:
  cypher-network:
    driver: bridge
